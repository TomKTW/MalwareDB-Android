<resources>
    <string name="app_name">MalwareDB</string>
    <string name="placeholder">Placeholder</string>

    <string name="malware_name">Name</string>
    <string name="malware_type">Type</string>
    <string name="malware_platform">Platform</string>
    <string name="malware_source_language">Source Language</string>
    <string name="malware_file_type">File Type</string>
    <string name="malware_size">Size (bytes)</string>
    <string name="malware_author">Author</string>
    <string name="malware_origin">Origin</string>
    <string name="malware_date_discovery">Discovery Date</string>
    <string name="malware_aliases">Aliases</string>
    <string name="malware_links">Links</string>
    <string name="malware_description">Description</string>

    <string name="action_search">Search</string>
    <string name="action_settings">Settings</string>
    <string name="action_load_sample">Load Sample List</string>

    <string name="menu_apply">Apply</string>
    <string name="menu_edit">Edit</string>
    <string name="unknown">Unknown</string>

    <string-array name="add_type">
        <item>Type</item>
        <item>Virus</item>
        <item>Worm</item>
        <item>Trojan Horse</item>
        <item>Exploit</item>
        <item>PUP</item>
    </string-array>

    <string-array name="add_platform">
        <item>Platform</item>
        <item>Windows</item>
        <item>DOS</item>
        <item>Linux</item>
        <item>Android</item>
        <item>Java</item>
        <item>MS Office</item>
        <item>Amiga</item>
        <item>Palm</item>
        <item>Symbian</item>
        <item>Mac OS</item>
        <item>iOS</item>
        <item>Various</item>
    </string-array>

    <string-array name="add_source_language">
        <item>Source Language</item>
        <item>Assembler</item>
        <item>Java</item>
        <item>C</item>
        <item>C++</item>
        <item>C#</item>
        <item>JavaScript</item>
        <item>Python</item>
        <item>VBS</item>
    </string-array>

    <string-array name="add_file_type">
        <item>File Type</item>
        <item>Executable</item>
        <item>Script</item>
        <item>App Package</item>
        <item>Document Macro</item>
        <item>Boot Sector</item>
    </string-array>

    <string-array name="link_type">
        <item>Link</item>
        <item>Media</item>
    </string-array>

    <string name="title_activity_info">InfoActivity</string>
    <string name="section_format">Placeholder section: %1$d</string>

    <string-array name="name_sample">
        <item>Elk Cloner</item>
        <item>AIDS.552</item>
        <item>Michelangelo</item>
        <item>Happy99</item>
        <item>Melissa.A</item>
        <item>ILOVEYOU</item>
        <item>Macur</item>
        <item>LoseLose</item>
        <item>HPS.5124</item>
    </string-array>

    <string-array name="type_sample">
        <item>Virus</item>
        <item>Virus</item>
        <item>Virus</item>
        <item>Worm</item>
        <item>Worm</item>
        <item>Worm</item>
        <item>Trojan Horse</item>
        <item>Trojan Horse</item>
        <item>Virus</item>
    </string-array>

    <string-array name="platform_sample">
        <item>Apple II</item>
        <item>DOS</item>
        <item>DOS</item>
        <item>Windows</item>
        <item>MS Office</item>
        <item>Windows</item>
        <item>Windows</item>
        <item>Mac OS X</item>
        <item>Windows</item>
    </string-array>

    <string-array name="source_sample">
        <item>Assembler</item>
        <item>Pascal</item>
        <item>Assembler</item>
        <item>Assembler</item>
        <item>Visual Basic</item>
        <item>Visual Basic</item>
        <item>C++</item>
        <item>C++</item>
        <item>C++</item>
    </string-array>

    <string-array name="filetype_sample">
        <item>Boot Sector</item>
        <item>Executable</item>
        <item>Boot Sector</item>
        <item>Executable</item>
        <item>Document Macro</item>
        <item>Script</item>
        <item>Executable</item>
        <item>Executable</item>
        <item>Executable</item>
    </string-array>

    <string-array name="size_sample">
        <item>0</item>
        <item>13952</item>
        <item>2354</item>
        <item>10000</item>
        <item>1890</item>
        <item>3672</item>
        <item>23564</item>
        <item>537654</item>
        <item>5124</item>
    </string-array>

    <string-array name="author_sample">
        <item>Richard Skrenta</item>
        <item>Dr. Theresa Goode</item>
        <item>Unknown</item>
        <item>Spanska</item>
        <item>David L. Smith</item>
        <item>Unknown</item>
        <item>Unknown</item>
        <item>Zach Gage</item>
        <item>Unknown</item>
    </string-array>

    <string-array name="origin_sample">
        <item>Mount Lebanon, PA, USA</item>
        <item>United States</item>
        <item>New Zealand</item>
        <item>France</item>
        <item>Aberdeen Township, NJ, USA</item>
        <item>Phillipines</item>
        <item>Unknown</item>
        <item>United States</item>
        <item>Unknown</item>
    </string-array>

    <string-array name="date_sample">
        <item>-.2.1982.</item>
        <item>-.4.1989.</item>
        <item>4.2.1991.</item>
        <item>27.1.1999.</item>
        <item>26.3.1999.</item>
        <item>4.5.2000.</item>
        <item>Unknown</item>
        <item>3.11.2009.</item>
        <item>-.-.1997.</item>
    </string-array>

    <string-array name="aliases_sample">
        <item>Elk Cloner;</item>
        <item>Virus.DOS.AIDS.552;</item>
        <item>Michelangelo;</item>
        <item>Ska;Happy99;WSOCK32.SKA;SKA.EXE;I-Worm.Happy;PE_SKA;Happy;</item>
        <item>Virus:W32/Melissa;W97M.Mailissa;Kwyjibo;Kwejeebo;</item>
        <item>VBS/LoveLet-AE [Sophos];VBS/LoveLetter.A-V@mm [Norman];VBS/LoveLetter [F-Secure];VBS/Loveletter@MM [McAfee];</item>
        <item>Trojan.Win32.Macur (Kaspersky Lab);Trojan: Macur (McAfee);Troj/Macur (Sophos);Trj/Macur (Panda);W32/Trojan!028f (FPROT);Trojan:Win32/Macur (MS(OneCare));Trojan.Macur (DrWeb);Win32/Macur trojan (Nod32);Trojan.Win32.Macur (BitDef7);Trojan.Macur.B (VirusBuster);Win32:Trojan-gen (AVAST);Trojan.Win32.Macur (Ikarus);Generic.KSI (AVG);TR/Macur.A (AVIRA);Trojan.Macur (NAV);W32/Macur.A (Norman);Macur (NAI);TROJ_MACUR.A (PCCIL);Trojan.Macur (Rising);Trojan.Win32.Macur [AVP] (FSecure);TROJ_MACUR.A (TrendMicro);Trojan.Macur.B (VirusBusterBeta);</item>
        <item>OSX_LOSEGAM.A [Trend];Trojan:OSX/Loosemaque.A [F-Secure];</item>
        <item>Win95.HPS.5124 (Kaspersky Lab);Virus: W95/HPS.gen (McAfee);W95/Hanta-PS (Sophos);W95/HPS (Panda);W32/HPS.5124 (FPROT)</item>
    </string-array>

    <string-array name="links_sample">
        <item>http://www.skrenta.com/cloner/|link;https://www.youtube.com/watch?v=bKtx8Ph7eoo|media;http://vignette2.wikia.nocookie.net/malware/images/e/e6/Elk-cloner.gif|media;</item>
        <item>https://www.youtube.com/watch?v=tckwz0ZS3Zo|media;http://vignette3.wikia.nocookie.net/malware/images/d/d6/Aids_computer_virus.png|media;http://home.mcafee.com/VirusInfo/VirusProfile.aspx?key=98148#none|link;</item>
        <item>http://web.archive.org/web/20110614112706/http://vx.netlux.org/lib/aeu02.html|link;https://www.youtube.com/watch?v=2Gx1Rs0WNnY|media;</item>
        <item>https://upload.wikimedia.org/wikipedia/commons/6/6e/Happy99.PNG|media;https://www.youtube.com/watch?v=EiWDg-nSCVo|media;https://www.youtube.com/watch?v=b37Q1VwktVk|media;https://www.youtube.com/watch?v=Bwpt0EyOSM0|media;https://www.f-secure.com/v-descs/ska.shtml|link;https://www.symantec.com/security_response/writeup.jsp?docid=2000-121812-3151-99|link;</item>
        <item>https://www.symantec.com/security_response/writeup.jsp?docid=2000-122113-1425-99|link;http://www.f-secure.com/v-descs/melissa.shtml|link;https://www.youtube.com/watch?v=3d0MYdAAH5c|media;https://www.youtube.com/watch?v=pagPRTjnbhI|media;</item>
        <item>http://www.symantec.com/security_response/writeup.jsp?docid=2000-121815-2258-99|link;https://www.youtube.com/watch?v=ZqkFfF5kAvw|media;https://www.youtube.com/watch?v=9BtxDdq5dwc|media;https://www.youtube.com/watch?v=MzgaiIMjsh4|media;</item>
        <item>https://www.symantec.com/security_response/writeup.jsp?docid=2002-112913-4132-99|link;https://www.youtube.com/watch?v=_apjJyW5TSc|media;</item>
        <item>http://www.symantec.com/content/en/us/global/images/threat_writeups/2009-110309-3638-99.1.jpg|media;https://www.youtube.com/watch?v=DSlYnns98TM|media;http://www.symantec.com/connect/blogs/osxloosemaque-it-s-not-just-game-anymore|link;</item>
        <item>https://www.youtube.com/watch?v=UtgBhvsaZIU|media;</item>
    </string-array>

    <string-array name="description_sample">
        <item>Elk Cloner is one of the first known microcomputer viruses that spread in the wild, i.e., outside the computer system or laboratory in which it was written. It attached itself to the Apple II operating system and spread by floppy disk. It was written around 1982 by a 15-year-old high school student, Rich Skrenta. It was originally a joke, created and put onto a game disk.\n\n
            Elk Cloner spread by infecting the Apple DOS 3.3 operating system using a technique now known as a boot sector virus. It was attached to a game, the game was then set to play. The 50th time the game was started, the virus was released, but instead of playing the game, it would change to a blank screen that displayed a poem about the virus named Elk Cloner.\n\n
            If a computer booted from an infected floppy disk, a copy of the virus was placed in the computer\'s memory. When an uninfected disk was inserted into the computer, the entire DOS (including Elk Cloner) would be copied to the disk, allowing it to spread from disk to disk. To prevent the DOS from being continually re-written each time the disk was accessed,
            Elk Cloner also wrote a signature byte to the disk\'s directory, indicating that it had already been infected.\n\n
            The poem that Elk Cloner would display was as follows:\n\n
            Elk Cloner: The program with a personality\n\n
            It will get on all your disks\n
            It will infiltrate your chips\n
            Yes, it\'s Cloner!\n\n
            It will stick to you like glue\n
            It will modify RAM too\n
            Send in the Cloner!\n\n
            Elk Cloner did not cause deliberate harm, but Apple DOS disks without a standard image had their reserved tracks overwritten.</item>
        <item>AIDS.552 is a computer virus written in Turbo Pascal 3.01a which overwrites com files. AIDS is the first virus known to exploit the MS-DOS corresponding file vulnerability. In MS-DOS, if both foo.com and foo.exe exist, then foo.com will always be executed first. Thus, by creating infected com files, AIDS code will always be executed before the intended exe code.\n\n
            When the AIDS virus activates, it displays the following screen.\n\n
            ATTENTION\n\n
            I have been elected to inform you that throughout your process of
            collecting and executing files, you have accdientally ¶HÜ¢KΣ►
            yourself over: again, that\'s PHUCKED yourself over. No, it cannot
            be; YES, it CAN be, a √ìτûs has infected your system. Now what do
            you have to say about that? HAHAHAHAHA. Have ¶HÜÑ [PHUN] with this one and
            remember, there is NO cure for\n
            AIDS\n\n
            In the message above, the word AIDS covers about half of the screen. The system is then halted, and must be powered down and rebooted to restart it.\n\n
            The AIDS virus overwrites the first 13,952 bytes of an infected com file. Overwritten files must be deleted and replaced with clean copies (available if you have made backups) in order to remove the virus. It is not possible to recover the overwritten portion of the program.\n\n
            The AIDS II virus appears a more elegant revision of AIDS. AIDS II also employs the corresponding file technique to execute infected code. </item>
        <item>This Stoned variant will activate on the birthday of Michelangelo Bounnaroti, who was born on March 6. 1475. It will then overwrite most of the hard disk. Structurally it is similar to the \'Stoned\' virus, but it will infect non-360K diskettes correctly.\n\n
            It is not an easy task task to recover from the activation of Michelangelo. The virus overwrites the first 17 sectors on heads 0-3 on the first 256 tracks of the disk the machine has been booted from.\n\n
            There are several known variants of this virus - some of them do not activate at all. There are also at least two file viruses that occasionally \'drop\' the Michelangelo virus to hard drives master boot sector, namely Prague.Pizza and HLLC.Enrico.A.
            Michelangelo used to be very widespread in the early 1990s. Nowadays it is almost extinct. </item>
        <item>When the Happy99.exe file has been executed, every e-mail and newsgroup posting sent from the machine will cause a second message to be sent. This will contain the same sender and recipient information but contains no text, just the Happy99.exe file itself as an attachment.\n
            Since people will usually receive Happy99.exe from someone they know (as you normally get e-mail from someone you know), people tend to trust this attachment, and run it.\n
            When executed first time, it creates SKA.EXE and SKA.DLL in the system directory. SKA.EXE is a copy of HAPPY99.EXE. SKA.DLL is packed inside SKA.EXE. After this Ska creates a copy of WSOCK32.DLL as WSOCK32.SKA in the system directory. Then it tries to patch WSOCK32.DLL so that its export entries for two functions will point to new routines (to the worm\'s own functions) inside the patched WSOCK32.DLL. If WSOCK32.DLL is in use, Ska.A modifies the registry\'s RunOnce entry to execute SKA.EXE during next boot-up. (When executed as SKA.EXE it does not display the firework, just tries to patch WSOCK32.DLL until it is not used.).\n\n
            "Connect" and "Send" exports are patched in WSOCK32.DLL. Thus the worm is able to see if the local user has any activity on network. When "Connect" or "Send" APIs are called, Ska loads its SKA.DLL containing two exports: "news" and "mail".\n
            Then it spams itself to the same newsgroups or same e-mail addresses where the user was posting or mailing to. It maps SKA.EXE to memory and converts it to uuencoded format and mails an additional e-mail or newsgroup post with the same header information as the original message but containing no text but just an attachment called Happy99.exe.\n
            The mail header of the manipulated mails will contain a new field called "X-Spanska: YES". Normally this header field is not visible to receivers of the message.\n
            Since the worm does not check WSOCK32.DLL\'s attribute, it can not patch it if it is set to read only.
            Happy99 does not replicated under Windows NT.</item>
        <item>W97M.Melissa.A (also known as W97M.Mailissa) is a typical macro virus which has an unusual payload. When a user opens an infected document, the virus will attempt to e-mail a copy of this document to up to 50 other people, using Microsoft Outlook.
            Similar to W97M.Pri, the virus turns off the security protection upon opening an infected document in MS Word 2000. This disables MS Word 2000 macro prompt the next time the document is opened.\n
            It infects a MS Word 97 and MS Word 2000 document by adding a new VBA5 (macro) module named Melissa. Although there is nothing unique in the infection routine of this macro virus, it has a payload that utilizes MS Outlook to send an attachment of the infected document being opened.
            As its primary payload, the virus will attempt to use Microsoft Outlook to e-mail a copy of the infected document to up to 50 other people. When a user opens or closes an infected document, the virus first checks to see if it has done this mass e-mailing once before, by checking the following registry key:\n\n
            "HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\" as "Melissa?" value.\n\n
            If this key has a value "Melissa?" set to the value "...by Kwyjibo", then the mass e-mailing has been done previously from the current machine. The virus will not attempt to do the mass mailing a second time, if it has already been done from this machine. </item>
        <item>When the worm executes, it copies itself to the following locations:\n\n
            %System%\\Mskernel32.vbs\n
            %System%\\LOVE-LETTER-FOR-YOU.TXT.vbs\n
            %Windows%\\Win32dll.vbs\n
            The worm then checks for the presence of Winfat32.exe in the %System% folder.\n
            If the file does not exist, the worm sets the Internet Explorer home page to a website with the Win-bugsfix.exe file. This website has been shut down.\n
            If the file does exist, the worm creates the following registry subkey:\n\n
            HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\WIN-BUGSFIX\n\n
            It then executes the file during system startup. The Internet Explorer home page is then replaced with a blank page.\n
            For each drive, including network drives, the worm attempts to infect files that have .vbs and .vbe extensions. The worm also searches for files with the extensions: .js, .jse, .css, .wsh, .sct, .hta, .jpg, .jpeg, .mp3, and .mp2.\n
            When files with these extensions are found, the worm does the following:\n\n
            Overwrites all files having the extensions: .js, .jse, .css, .wsh, .sct, .hta, .jpg, and .jpeg with viral code. It then makes a copy of the file and adds the extension .vbs to the file name. For example, if the file is named House_pics.jpg, the overwritten file is named House_pics.jpg.vbs. The original file is then deleted. These files must be deleted and then restored from a backup.\n
            Creates copies of all files having the .mp3 and .mp2 extensions. It then overwrites the copy with viral code and adds the .vbs extension to the file name. Next it changes the attribute of the original .mp3 or .mp2 file to hidden. Because of this, the original copies of .mp3 and .mp2 files are still unaltered, though hidden, on the hard drive. The modified files should be deleted.</item>
        <item>In general it drops itself to %windir% with filename "pic.exe", edits a line in Win.ini to load that file at every boot ("load=pic.exe"), and then it creates about 1,410 folders named with zeros, ones, twos, threes, fours and fives, and it keeps stacking number by number using this pattern:\n\n
            0\n00\n000\n...\n00000000000000000000000000000000...\nAfter it comes to maximum, it continues to next number (1):\n
            1\n11\n111\n...\nAnother interesting thing is that it checks the folder name of current folder with specific pattern. If the 1st letter is W or 5th letter is O and 6th letter is W, it will not show fake error message. Note that it does check even parent folders as far it\'s noticed when trojan was launched on desktop.</item>
        <item>The Trojan may arrive on the computer as a application folder with the following name:lose lose.app
            When executed the user is presented with a video game.\n
            If user shoots an enemy character, a file or folder in user\'s home folder will be deleted.
            When the user character is destroyed, the game ends, and the Trojan sends the user\'s score to the following server, then deletes itself from the compromised computer: </item>
        <item>HPS stays active in memory and infects Win32 EXE files as they are accessed, encrypting its own code with variable polymorphic encryption layer.
            HPS activates on Saturdays. If a non-compressed Windows bitmap (BMP) file has been opened, the virus horizontally flips the picture. HPS patches the value DEADBABE (in hex) to the end of the bitmap header area to avoid flipping the same image again.
            Since non-compressed bitmap files are frequently used by Windows 95 and 98, this causes all kinds of weird effects - such as the start-up and power-down screen of Windows being "mirrorized". </item>
    </string-array>
</resources>
